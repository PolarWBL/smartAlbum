<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.smartalbum.dao.ImageSetMapper">
  <resultMap id="BaseResultMap" type="com.example.smartalbum.domain.ImageSet">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="depository_id" jdbcType="INTEGER" property="depositoryId"/>
    <result column="summary" jdbcType="VARCHAR" property="summary"/>
    <result column="detail" jdbcType="VARCHAR" property="detail"/>
    <result column="background_url" jdbcType="VARCHAR" property="backgroundUrl"/>
    <result column="wonderful_url" jdbcType="VARCHAR" property="wonderfulUrl"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, depository_id, summary, detail, background_url, wonderful_url, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.example.smartalbum.domain.ImageSetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from image_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from image_set
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from image_set
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.smartalbum.domain.ImageSetExample">
    delete from image_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.smartalbum.domain.ImageSet"
          useGeneratedKeys="true">
    insert into image_set (`name`, depository_id, summary,
                           detail, background_url, wonderful_url,
                           create_time, update_time)
    values (#{name,jdbcType=VARCHAR}, #{depositoryId,jdbcType=INTEGER}, #{summary,jdbcType=VARCHAR},
            #{detail,jdbcType=VARCHAR}, #{backgroundUrl,jdbcType=VARCHAR}, #{wonderfulUrl,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.smartalbum.domain.ImageSet"
          useGeneratedKeys="true">
    insert into image_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="depositoryId != null">
        depository_id,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="backgroundUrl != null">
        background_url,
      </if>
      <if test="wonderfulUrl != null">
        wonderful_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="depositoryId != null">
        #{depositoryId,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="backgroundUrl != null">
        #{backgroundUrl,jdbcType=VARCHAR},
      </if>
      <if test="wonderfulUrl != null">
        #{wonderfulUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.smartalbum.domain.ImageSetExample" resultType="java.lang.Long">
    select count(*) from image_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update image_set
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.depositoryId != null">
        depository_id = #{record.depositoryId,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.backgroundUrl != null">
        background_url = #{record.backgroundUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.wonderfulUrl != null">
        wonderful_url = #{record.wonderfulUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update image_set
    set id = #{record.id,jdbcType=INTEGER},
    `name` = #{record.name,jdbcType=VARCHAR},
    depository_id = #{record.depositoryId,jdbcType=INTEGER},
    summary = #{record.summary,jdbcType=VARCHAR},
    detail = #{record.detail,jdbcType=VARCHAR},
    background_url = #{record.backgroundUrl,jdbcType=VARCHAR},
    wonderful_url = #{record.wonderfulUrl,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.smartalbum.domain.ImageSet">
    update image_set
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="depositoryId != null">
        depository_id = #{depositoryId,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="backgroundUrl != null">
        background_url = #{backgroundUrl,jdbcType=VARCHAR},
      </if>
      <if test="wonderfulUrl != null">
        wonderful_url = #{wonderfulUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.smartalbum.domain.ImageSet">
    update image_set
    set `name`         = #{name,jdbcType=VARCHAR},
        depository_id  = #{depositoryId,jdbcType=INTEGER},
        summary        = #{summary,jdbcType=VARCHAR},
        detail         = #{detail,jdbcType=VARCHAR},
        background_url = #{backgroundUrl,jdbcType=VARCHAR},
        wonderful_url  = #{wonderfulUrl,jdbcType=VARCHAR},
        create_time    = #{createTime,jdbcType=TIMESTAMP},
        update_time    = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--带image 的image_Set 查询 用的列-->
  <sql id="Base_Column_ListByImage">
    image_set.id ,image_set.name ,image_set.depository_id,image_set.summary ,image_set.detail ,image_set.background_url ,
    image_set.wonderful_url ,image_set.create_time ,image_set.update_time,
    image.name as iName, image.url,image.url_mini,image.create_date as iCreate_date,
    image.update_date as iUpdate_date, image.state_id
  </sql>

  <!-- 带image 的image_Set 查询 -->
  <resultMap id="BaseResultMapByImage" type="com.example.smartalbum.domain.ImageSet">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="depository_id" jdbcType="INTEGER" property="depositoryId"/>
    <result column="summary" jdbcType="VARCHAR" property="summary"/>
    <result column="detail" jdbcType="VARCHAR" property="detail"/>
    <result column="background_url" jdbcType="VARCHAR" property="backgroundUrl"/>
    <result column="wonderful_url" jdbcType="VARCHAR" property="wonderfulUrl"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    <collection property="images" ofType="com.example.smartalbum.domain.Image">
      <!--      <id column="id1" jdbcType="INTEGER" property="id"/>-->
      <result column="iName" jdbcType="VARCHAR" property="name"/>
      <!--      <result column="depository_id" jdbcType="INTEGER" property="depositoryId"/>-->
      <!--      <result column="path" jdbcType="VARCHAR" property="path"/>-->
      <result column="url" jdbcType="VARCHAR" property="url"/>
      <result column="url_mini" jdbcType="VARCHAR" property="urlMini"/>
      <!--      <result column="size" jdbcType="VARCHAR" property="size"/>-->
      <result column="iCreate_date" jdbcType="TIMESTAMP" property="createDate"/>
      <result column="iUpdate_date" jdbcType="TIMESTAMP" property="updateDate"/>
      <result column="state_id" jdbcType="INTEGER" property="stateId"/>
      <!--      <result column="image_set_id" jdbcType="INTEGER" property="imageSetId"/>-->
    </collection>
  </resultMap>

  <!-- 带image的Image_set 查询sql语句 -->
  <select id="selectWithImage" parameterType="java.lang.Integer" resultMap="BaseResultMapByImage">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_ListByImage"/>
    from image_set left JOIN image ON image.image_set_id = image_set.id
    where image_set.id = #{image_set.id}
  </select>

</mapper>