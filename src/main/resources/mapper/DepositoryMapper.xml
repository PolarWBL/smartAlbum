<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.smartalbum.dao.DepositoryMapper">
  <resultMap id="BaseResultMap" type="com.example.smartalbum.domain.Depository">
    <id column="depository_id" jdbcType="INTEGER" property="id"/>
    <result column="depository_name" jdbcType="VARCHAR" property="name"/>
    <result column="depository_size" jdbcType="VARCHAR" property="size"/>
    <result column="depository_size_max" jdbcType="VARCHAR" property="sizeMax"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    depository.id as depository_id, depository.`name` as `depository_name`, depository.`size` as `depository_size`, 
    depository.size_max as depository_size_max
  </sql>
  <select id="selectByExample" parameterType="com.example.smartalbum.domain.DepositoryExample"
          resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from depository depository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from depository depository
    where depository.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from depository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.smartalbum.domain.DepositoryExample">
    delete from depository depository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.smartalbum.domain.Depository"
          useGeneratedKeys="true">
    insert into depository (`name`, `size`, size_max)
    values (#{name,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, #{sizeMax,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.smartalbum.domain.Depository"
          useGeneratedKeys="true">
    insert into depository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="sizeMax != null">
        size_max,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="sizeMax != null">
        #{sizeMax,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.smartalbum.domain.DepositoryExample"
          resultType="java.lang.Long">
    select count(*) from depository depository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update depository depository
    <set>
      <if test="record.id != null">
        depository.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        depository.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        depository.`size` = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.sizeMax != null">
        depository.size_max = #{record.sizeMax,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update depository depository
    set depository.id = #{record.id,jdbcType=INTEGER},
    depository.`name` = #{record.name,jdbcType=VARCHAR},
    depository.`size` = #{record.size,jdbcType=VARCHAR},
    depository.size_max = #{record.sizeMax,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.smartalbum.domain.Depository">
    update depository
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=VARCHAR},
      </if>
      <if test="sizeMax != null">
        size_max = #{sizeMax,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.smartalbum.domain.Depository">
    update depository
    set `name`   = #{name,jdbcType=VARCHAR},
        `size`   = #{size,jdbcType=VARCHAR},
        size_max = #{sizeMax,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>