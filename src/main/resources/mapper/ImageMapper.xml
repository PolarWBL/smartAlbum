<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.smartalbum.dao.ImageMapper">
    <resultMap id="BaseResultMap" type="com.example.smartalbum.domain.Image">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="depository_id" jdbcType="INTEGER" property="depositoryId"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="url_mini" jdbcType="VARCHAR" property="urlMini"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="size" jdbcType="VARCHAR" property="size"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="state_id" jdbcType="INTEGER" property="stateId"/>
        <result column="image_set_id" jdbcType="INTEGER" property="imageSetId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, `name`, depository_id, `path`, url_mini, url, `size`, create_date, update_date,
    state_id, image_set_id
    </sql>
    <select id="selectByExample" parameterType="com.example.smartalbum.domain.ImageExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from image
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
        <if test="forUpdate != null and forUpdate == true">
            for update
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from image
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from image
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.smartalbum.domain.ImageExample">
        delete from image
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.smartalbum.domain.Image"
            useGeneratedKeys="true">
        insert into image (`name`, depository_id, `path`,
                           url_mini, url, `size`,
                           create_date, update_date, state_id,
                           image_set_id)
        values (#{name,jdbcType=VARCHAR}, #{depositoryId,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR},
                #{urlMini,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR},
                #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{stateId,jdbcType=INTEGER},
                #{imageSetId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.example.smartalbum.domain.Image" useGeneratedKeys="true">
        insert into image
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="depositoryId != null">
                depository_id,
            </if>
            <if test="path != null">
                `path`,
            </if>
            <if test="urlMini != null">
                url_mini,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="size != null">
                `size`,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="stateId != null">
                state_id,
            </if>
            <if test="imageSetId != null">
                image_set_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="depositoryId != null">
                #{depositoryId,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="urlMini != null">
                #{urlMini,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                #{size,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="stateId != null">
                #{stateId,jdbcType=INTEGER},
            </if>
            <if test="imageSetId != null">
                #{imageSetId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.smartalbum.domain.ImageExample"
            resultType="java.lang.Long">
        select count(*) from image
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update image
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.depositoryId != null">
                depository_id = #{record.depositoryId,jdbcType=INTEGER},
            </if>
            <if test="record.path != null">
                `path` = #{record.path,jdbcType=VARCHAR},
            </if>
            <if test="record.urlMini != null">
                url_mini = #{record.urlMini,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.size != null">
                `size` = #{record.size,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.stateId != null">
                state_id = #{record.stateId,jdbcType=INTEGER},
            </if>
            <if test="record.imageSetId != null">
                image_set_id = #{record.imageSetId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update image
        set id = #{record.id,jdbcType=INTEGER},
        `name` = #{record.name,jdbcType=VARCHAR},
        depository_id = #{record.depositoryId,jdbcType=INTEGER},
        `path` = #{record.path,jdbcType=VARCHAR},
        url_mini = #{record.urlMini,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        `size` = #{record.size,jdbcType=VARCHAR},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
        state_id = #{record.stateId,jdbcType=INTEGER},
        image_set_id = #{record.imageSetId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.smartalbum.domain.Image">
        update image
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="depositoryId != null">
                depository_id = #{depositoryId,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                `path` = #{path,jdbcType=VARCHAR},
            </if>
            <if test="urlMini != null">
                url_mini = #{urlMini,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                `size` = #{size,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="stateId != null">
                state_id = #{stateId,jdbcType=INTEGER},
            </if>
            <if test="imageSetId != null">
                image_set_id = #{imageSetId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.smartalbum.domain.Image">
        update image
        set `name`        = #{name,jdbcType=VARCHAR},
            depository_id = #{depositoryId,jdbcType=INTEGER},
            `path`        = #{path,jdbcType=VARCHAR},
            url_mini      = #{urlMini,jdbcType=VARCHAR},
            url           = #{url,jdbcType=VARCHAR},
            `size`        = #{size,jdbcType=VARCHAR},
            create_date   = #{createDate,jdbcType=TIMESTAMP},
            update_date   = #{updateDate,jdbcType=TIMESTAMP},
            state_id      = #{stateId,jdbcType=INTEGER},
            image_set_id  = #{imageSetId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <resultMap type="com.example.smartalbum.domain.Image" id="selectMap2">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="depository_id" property="depositoryId"/>
        <result column="path" property="path"/>
        <result column="url" property="url"/>
        <result column="url_mini" property="urlMini"/>
        <result column="size" property="size"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <result column="state_id" property="stateId"/>
        <result column="image_set_id" property="imageSetId"/>
        <collection property="tags" column="id" ofType="com.example.smartalbum.domain.Tag"
                    select="com.example.smartalbum.dao.TagMapper.selectByImageId"/>
    </resultMap>

    <!-- 带tag的Image列-->
    <sql id="Base_Column_List2">
        image.id,image.name,image.depository_id,image.path,image.url_mini,image.url,image.size,image.create_date,
    image.update_date,image.state_id,image.image_set_id
    </sql>

    <!-- 带tag表的Image查询-->
    <select id="selectImagesByExample" parameterType="com.example.smartalbum.domain.ImageExample"
            resultMap="selectMap2">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List2"/>
        from image
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
        <if test="forUpdate != null and forUpdate == true">
            for update
        </if>
    </select>

    <sql id="Base_Column_List3">
        image.id,image.name,image.url,image.url_mini,image.state_id,image.create_date,image.update_date,image.depository_id
    </sql>
    <select id="selectSimpleImageListByExample" parameterType="com.example.smartalbum.domain.ImageExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List3"/>
        from image
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
        <if test="forUpdate != null and forUpdate == true">
            for update
        </if>
    </select>
</mapper>