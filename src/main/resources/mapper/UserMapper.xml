<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.smartalbum.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.smartalbum.domain.User">
        <id column="user_id" jdbcType="INTEGER" property="id"/>
        <result column="user_username" jdbcType="VARCHAR" property="username"/>
        <result column="user_password" jdbcType="VARCHAR" property="password"/>
        <result column="user_mail" jdbcType="VARCHAR" property="mail"/>
        <result column="user_depository_id" jdbcType="INTEGER" property="depositoryId"/>
        <result column="user_register_date" jdbcType="TIMESTAMP" property="registerDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user.id as user_id, user.username as user_username, user.`password` as `user_password`,
    user.mail as user_mail, user.depository_id as user_depository_id, user.register_date as user_register_date
    </sql>
    <select id="selectByExample" parameterType="com.example.smartalbum.domain.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="forUpdate != null and forUpdate == true">
            for update
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user user
        where user.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.smartalbum.domain.UserExample">
        delete from user user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.smartalbum.domain.User"
            useGeneratedKeys="true">
        insert into user (username, `password`, mail,
                          depository_id, register_date)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR},
                #{depositoryId,jdbcType=INTEGER}, #{registerDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.smartalbum.domain.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="mail != null">
                mail,
            </if>
            <if test="depositoryId != null">
                depository_id,
            </if>
            <if test="registerDate != null">
                register_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="mail != null">
                #{mail,jdbcType=VARCHAR},
            </if>
            <if test="depositoryId != null">
                #{depositoryId,jdbcType=INTEGER},
            </if>
            <if test="registerDate != null">
                #{registerDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.smartalbum.domain.UserExample" resultType="java.lang.Long">
        select count(*) from user user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user user
        <set>
            <if test="record.id != null">
                user.id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                user.username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                user.`password` = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.mail != null">
                user.mail = #{record.mail,jdbcType=VARCHAR},
            </if>
            <if test="record.depositoryId != null">
                user.depository_id = #{record.depositoryId,jdbcType=INTEGER},
            </if>
            <if test="record.registerDate != null">
                user.register_date = #{record.registerDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user user
        set user.id = #{record.id,jdbcType=INTEGER},
        user.username = #{record.username,jdbcType=VARCHAR},
        user.`password` = #{record.password,jdbcType=VARCHAR},
        user.mail = #{record.mail,jdbcType=VARCHAR},
        user.depository_id = #{record.depositoryId,jdbcType=INTEGER},
        user.register_date = #{record.registerDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.smartalbum.domain.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="mail != null">
                mail = #{mail,jdbcType=VARCHAR},
            </if>
            <if test="depositoryId != null">
                depository_id = #{depositoryId,jdbcType=INTEGER},
            </if>
            <if test="registerDate != null">
                register_date = #{registerDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.smartalbum.domain.User">
        update user
        set username      = #{username,jdbcType=VARCHAR},
            `password`    = #{password,jdbcType=VARCHAR},
            mail          = #{mail,jdbcType=VARCHAR},
            depository_id = #{depositoryId,jdbcType=INTEGER},
            register_date = #{registerDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <resultMap type="com.example.smartalbum.domain.User" id="selectMap1">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="mail" column="mail"/>
        <result property="registerDate" column="register_Date"/>
        <association property="depository" javaType="com.example.smartalbum.domain.Depository">
            <id property="id" column="depository_id"/>
            <result property="name" column="name"/>
            <result property="size" column="size"/>
            <result property="sizeMax" column="size_max"/>
        </association>
    </resultMap>
    <select id="selectAllByUserName" resultMap="selectMap1" parameterType="string">
        SELECT *
        from user
                 join depository d on d.id = user.depository_id
        where username = #{username}
           or mail = #{username};
    </select>

</mapper>